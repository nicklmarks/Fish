<project default="compile">

  <!-- build.xml for lab05, W12, CS56
       name: Nicholas Marks 02/24/12 -->

  <property environment="env"/> <!-- load the environment variables --> 
  <property name="webRoot" value="${env.HOME}/public_html/cs56/S12/issues0000383" />
  <property name="webBaseURL" value="http://www.cs.ucsb.edu/~${env.USER}/cs56/S12/issues0000383" />
  <property name="projectName" value="lab05" /> 
  <property name="jwsDest" value="${webRoot}/jws" /> 
  <property name="jwsURL" value="${webBaseURL}/jws" /> 
  <property name="javadocDest" value="${webRoot}/javadoc" /> 
  <property name="javadocURL" value="${webBaseURL}/javadoc" /> 
  <property name="mainClass" value="FishAnimation" /> 
  <!--property name="writeMyFile" value="WriteMyPictureToFile" /--> 

 <target name="compile" description="Compile the FishAnimation program" > 
	<mkdir dir="build" /> 
   <javac srcdir="src" destdir="build" debug="true" debuglevel="lines,source" includeantruntime="false">                 
     <classpath>                                                                             
         <pathelement location="build"/> 
         <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/> 
     </classpath> 
    </javac>       
 </target>

  <target name="run" depends="compile" description="run the FishAnimation program"> 
    <java classname="${mainClass}" classpath="build" fork="true" />
  </target>

  <target name="clean" description="delete unnecessary files and directories">
    <delete dir="build" quiet="true" />
    <delete dir="javadoc" quiet="true" />
    <delete dir="dist" quiet="true" />  
    <delete dir="download" quiet="true" />                                         
    <delete dir="temp" quiet="true" />       
  </target>

<target name="javadoc" depends="compile" description="creates the javadoc for the FishAnimation program"> 
   <delete dir="javadoc" quiet="true" />                                                          
   <javadoc  destdir="javadoc" author="true" version="true" use="true" >                 
      <fileset dir="src" includes="**/*.java"/>                                                     
      <classpath>                                                                                 
          <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>      
     </classpath>                                                                                 
   </javadoc>                                                                                     
                                                                                                  
   <!-- delete the old javadoc -->                                                                
   <delete quiet="true" dir="${javadocDest}" />                                                   
                                                                                                  
   <!-- copy everything you just made to the javadoc destination, and then make it readable -->   
                                                                                                  
   <copy todir="${javadocDest}" >                                                                 
     <fileset dir="javadoc"/>                                                                     
   </copy>                                                                                        
                                                                                                  
   <!-- Note: this only does the chmod command on the                                             
        javadoc subdirectory and its contents.  You MIGHT have to                                 
        MANUALLY do the chmod on the parent directories.  However,                                
        you should only need to do that once. -->                                                 
                                                                                                  
   <chmod dir="${javadocDest}" perm="755"  type="dir" includes="**" />                            
   <chmod dir="${javadocDest}" perm="755"  type="file" includes="**/*" />                         
   <echo>Javadoc deployed to ${javadocURL}</echo>                                                 
                                                                                                  
 </target>        

 <target name="test" depends="compile" description="test the FishAnimation with JUnit tests">

    <junit haltonerror="no" haltonfailure="no">
       <classpath>
         <pathelement location="/cs/faculty/pconrad/public_html/cs56/lib/junit-4.8.2.jar"/>
         <pathelement location="build"/>
       </classpath>

       <batchtest fork="yes">
          <fileset dir="src">
            <!-- this will pick up every class with a name ending in Test -->
            <include name="**/*Test.java"/>
          </fileset>
       </batchtest>

        <formatter type="plain" usefile="false" /> 
       
    </junit>
  </target>

 <target name="jar" depends="compile" description="creates the .jar file for the FishAnimation">  
   <mkdir dir="dist" />                                                         
   <jar destfile="dist/${mainClass}.jar" basedir="build">   
     <manifest>
        <attribute name="Main-Class" value="${mainClass}"/>
     </manifest>
   </jar>                 
 </target> 

<target name="publish" depends="linenumbers,jar,javadoc,download,jws" description="publishes to public_html">                           
   <mkdir dir="${webRoot}" />                                      
                                                                                  
   <delete dir="${webRoot}/browse" />                              
   <mkdir dir="${webRoot}/browse" />                               
                                                                                  
   <delete dir="${webRoot}/download" />                            
   <mkdir dir="${webRoot}/download" />                             
                                                                                  
   <copy file="html/index.html" todir="${webRoot}"/>               
   <!--copy file="mypic1.png" todir="${webRoot}/${projectName}"/-->
   <copy file="numberedsource.txt" todir="${webRoot}/browse"/>  
                                                                                  
   <copy todir="${webRoot}/download" >                             
     <fileset dir="download"/>                                                    
     <fileset dir="dist" />                                                       
   </copy>                                                                        
                                                                                  
   <copy file="build.xml" todir="${webRoot}/browse"/>              
                                                                                  
   <copy todir="${webRoot}/browse/src" >                           
     <fileset dir="src"/>                                                         
   </copy>                                                                        
                                                                                  
   <chmod dir="${webRoot}"                                        
          perm="755" type="both" includes="**/*"/>                                
                                                                                  
   <echo>Project published to ${webBaseURL}</echo>                 
</target>    

<target name="download" depends="" description="download target to post compressed files">                                          

  <!-- delete everything under the "temp" and "download" subdirectories 
          In Ant, **/* means "all files under any number of directory levels" -->
                                                                                  
  <delete quiet="true">                                                           
     <fileset dir="temp" includes="**/*" />                                       
     <fileset dir="download" includes="**/*" />                                    
  </delete>                                                                       
                                                               
  <!-- create the directories we'll need to stage the zip file and tarballs -->
                   
  <mkdir dir="download" />                                                         
  <mkdir dir="temp" />                                                            
  <mkdir dir="temp/${mainClass}" />                                             
                                                                                  
  <!-- copy everything from the current directory that we want to put in the zip file/tarball into the
          temp subdirectory.   Exclude things we do NOT want to include in the tarball/zip file -->

  <copy todir="temp/${mainClass}">                                              
    <fileset dir="."                                                              
     excludes="build/**, javadoc/**, **/*~, temp/**, dist/**, download/**"/>       
  </copy>                                                                         
                                                                                  
  <!-- create the tar file from the temp directory -->

  <tar destfile="temp/${mainClass}.tar"                                         
       basedir="temp"                                                             
       includes="${mainClass}/**"                                               
   />                                                                             
  
 <!-- compress the tar file into a tarball (using "gzip") -->
                                                                                
  <gzip zipfile="download/${mainClass}.tgz"                                      
        src="temp/${mainClass}.tar" />                                          
 
 <!-- create a zip file -->
                                                 
 <zip destfile="download/${mainClass}.zip"                                      
       basedir="temp"                                                             
       includes="${mainClass}/**"                                               
  />                           

  <!-- Now we have the tarball and zip file in the download 
          subdirectory, so we are finished with the temp directory -->

  <delete quiet="true">                                                           
     <fileset dir="temp" includes="**/*"/>                                        
  </delete>                                                                       
                                                                                  
 </target>     

 <target name="linenumbers" description="Creates a file containing all source files with line numbers">               
   <exec executable="bash">                                                                                          
     <arg value="-c"/>                                                                                               
     <arg value='tree -ifQ src | grep \.java\"$ | xargs pr -n > numberedsource.txt'/>                                
   </exec>                                                                                                           
 </target>     

 <target name="jws" depends="compile,jar" description="creates the jws for FishAnimation">

   <delete dir="${webRoot}/jws" />
   <mkdir dir="${webRoot}/jws" />

   <copy todir="${jwsDest}" file="dist/${mainClass}.jar" />
   <copy todir="${jwsDest}" >
       <fileset dir="jws" includes="*.html"/>
       <fileset dir="jws" includes="*.jnlp"/>
       <fileset dir="jws" includes="*.png"/>
       <fileset dir="jws" includes=".htaccess"/>
   </copy>
   <echo>Java web start at ${jwsURL}</echo>
 </target>

 <target name="samplePic" depends="compile">
    <java classname="${writeFile}" classpath="build" fork="true" >
	<arg value="mypicture" />
    </java>
 </target>

 <target name="mypic1" depends="compile">
    <java classname="${writeMyFile}" classpath="build" fork="true" >
	<arg value="mypic1" />
    </java>            
 </target>

</project>
